
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- <parent>
		<artifactId>isoform-package</artifactId>
		<groupId>edu.uconn.engr.dna</groupId>
		<version>1.0</version>
	</parent> -->
    
    <version>1.0</version>
	<groupId>edu.uconn.engr.dna</groupId>
	<artifactId>dge-em</artifactId>
	<name>DGE-EM</name>
	<description>DGE-EM core files</description>
	<packaging>jar</packaging>

	<properties>
		<staging.dir>${project.build.directory}</staging.dir>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.scala-tools</groupId>
				<artifactId>maven-scala-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Make the jar executable and add classpath to manifest -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>edu.uconn.engr.dna.dgeem.DGEStartup</mainClass>
							<addClasspath>true</addClasspath>
						</manifest>
					</archive>
				</configuration>
			</plugin>

	 <!-- copy dependencies to izpack staging dir -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.0</version>
				<executions>
					<execution>
						<id>standard-installer</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<excludeGroupIds>org.codehaus.izpack</excludeGroupIds>
                            <!-- dont want standalone compiler -->
							<outputDirectory>${staging.dir}/dependency</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

	<!-- Copy source code jars to izpack staging dir -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2-beta-5</version>
				<configuration>
					<outputDirectory>${staging.dir}</outputDirectory>
					<finalName>${project.artifactId}</finalName>
				</configuration>
				<executions>
					<execution>
						<id>assemble-sources</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/sources.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.4</version>
				<executions>
          <!-- copy other checked resource into staging area, expected by install.xml -->
					<execution>
						<id>create-staging-area</id>
						<phase>process-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<copy todir="${staging.dir}/scripts">
									<fileset dir="src/main/resources/scripts"/>
								</copy>
								<copy todir="${staging.dir}">
									<fileset dir="${project.basedir}">
										<include name="README*"/>
										<include name="LICENSE*"/>
										<include name="NOTICE*"/>
									</fileset>
								</copy>
								<fixcrlf srcdir="${staging.dir}/scripts/unix" eol="lf" eof="remove"/>
								<fixcrlf srcdir="${staging.dir}" includes="*.TXT"/>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>

     <!-- Run Izpack -->
			<plugin>
				<groupId>org.codehaus.izpack</groupId>
				<artifactId>izpack-maven-plugin</artifactId>
				<version>1.0-alpha-5</version>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.izpack</groupId>
						<artifactId>izpack-standalone-compiler</artifactId>
						<version>4.3.2</version>
					</dependency>
				</dependencies>
				<configuration>
					<descriptorEncoding>UTF-8</descriptorEncoding>
					<izpackBasedir>${staging.dir}</izpackBasedir>
				</configuration>
				<executions>
					<execution>
						<id>standard-installer</id>
						<phase>package</phase>
						<goals>
							<goal>izpack</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>scala-tools.org</id>
			<name>Scala-tools Maven2 Repository</name>
			<url>http://scala-tools.org/repo-releases</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>scala-tools.org</id>
			<name>Scala-tools Maven2 Repository</name>
			<url>http://scala-tools.org/repo-releases</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>2.8.1</version>
		</dependency>
		<dependency>
			<groupId>edu.uconn.engr.dna</groupId>
			<artifactId>isoform-common</artifactId>
			<version>1.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.jopt-simple</groupId>
			<artifactId>jopt-simple</artifactId>
			<version>3.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
	</dependencies>

</project>
